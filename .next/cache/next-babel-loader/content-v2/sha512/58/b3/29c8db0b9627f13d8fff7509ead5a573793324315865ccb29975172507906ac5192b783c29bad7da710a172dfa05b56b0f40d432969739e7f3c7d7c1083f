{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/SashaVerdiyev/Desktop/WebDev/react_course/nextJs/pages/[meetupId]/index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  _s();\n\n  var meetup = props.meetup;\n  var router = useRouter();\n  if (router.isFallback) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meetup.image,\n    description: meetup.description,\n    address: meetup.address,\n    title: meetup.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetupDetails, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/SashaVerdiyev/Desktop/WebDev/react_course/nextJs/pages/[meetupId]/index.js"],"names":["useRouter","React","MeetupDetail","MeetupDetails","props","meetup","router","isFallback","image","description","address","title"],"mappings":";;;;;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAqBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,MACpBC,MADoB,GACTD,KADS,CACpBC,MADoB;AAG5B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,MAAIM,MAAM,CAACC,UAAX,EAAuB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,KADhB;AAEE,IAAA,WAAW,EAAEH,MAAM,CAACI,WAFtB;AAGE,IAAA,OAAO,EAAEJ,MAAM,CAACK,OAHlB;AAIE,IAAA,KAAK,EAAEL,MAAM,CAACM;AAJhB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAfQR,a;UAGQH,S;;;KAHRG,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst Dummy_Meetups = [\n  {\n    id: 'm1',\n    title: 'first meetup',\n    image:\n      'https://images.unsplash.com/photo-1640210178824-d029d3cfd676?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n    address: 'lviv',\n    description: 'describe me ',\n  },\n  {\n    id: 'm2',\n    title: 'first meetup',\n    image:\n      'https://images.unsplash.com/photo-1640210178824-d029d3cfd676?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n    address: 'lviv',\n    description: 'describe me ',\n  },\n];\n\nfunction MeetupDetails(props) {\n  const { meetup } = props;\n\n  const router = useRouter();\n\n  if (router.isFallback) return <div>Loading...</div>;\n\n  return (\n    <MeetupDetail\n      image={meetup.image}\n      description={meetup.description}\n      address={meetup.address}\n      title={meetup.title}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const loadedMeetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  console.log('ðŸš€ ~ getStaticPaths ~ loadedMeetups', loadedMeetups);\n\n  client.close();\n\n  let meetupsId = loadedMeetups.map((meetup) => {\n    const meetupId = meetup._id.toString();\n    return { meetupId };\n  });\n\n  return { fallback: true, paths: { params: meetupsId } };\n}\n\n// export async function getStaticProps({ params: {slug} }) {\n\nexport async function getStaticProps(context) {\n  // console.log(context.params.slug);\n\n  // const res = await fetch(\n  //   `https://learning-react-415d2-default-rtdb.europe-west1.firebasedatabase.app/meetups/${context.params.meetupId}/.json`\n  // );\n  // const loadedMeetup = await res.json();\n\n  // return {\n  //   props: { meetup: loadedMeetup },\n  // };\n  return {\n    props: { meetup: Dummy_Meetups[0] },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}