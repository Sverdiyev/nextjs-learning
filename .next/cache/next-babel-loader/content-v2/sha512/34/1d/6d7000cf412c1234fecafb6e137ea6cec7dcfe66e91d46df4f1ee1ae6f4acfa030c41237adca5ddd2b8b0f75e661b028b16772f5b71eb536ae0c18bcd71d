{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/SashaVerdiyev/Desktop/WebDev/react_course/nextJs/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nconst Dummy_Meetups = [{\n  id: 'm1',\n  title: 'first meetup',\n  image: 'https://images.unsplash.com/photo-1640210178824-d029d3cfd676?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n  address: 'lviv',\n  description: 'describe me '\n}, {\n  id: 'm2',\n  title: 'first meetup',\n  image: 'https://images.unsplash.com/photo-1640210178824-d029d3cfd676?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n  address: 'lviv',\n  description: 'describe me '\n}];\n\nfunction MeetupDetails(props) {\n  const {\n    meetup\n  } = props;\n  const router = useRouter();\n  if (router.isFallback) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meetup.image,\n    description: meetup.description,\n    address: meetup.address,\n    title: meetup.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const loadedMeetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  let meetupsId = loadedMeetups.map(meetup => {\n    const meetupId = meetup._id.toString();\n\n    return {\n      params: {\n        meetupId\n      }\n    };\n  });\n  return {\n    fallback: true,\n    paths: meetupsId\n  };\n} // export async function getStaticProps({ params: {slug} }) {\n\nexport async function getStaticProps(context) {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const {\n    meetupId\n  } = context.params;\n  const loadedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  console.log('ðŸš€ ~ getStaticProps ~ loadedMeetup', loadedMeetup);\n  client.close();\n  const meetup = {\n    title: loadedMeetup.title,\n    address: loadedMeetup.address,\n    image: loadedMeetup.image,\n    description: loadedMeetup.description,\n    id: loadedMeetup._id.toString()\n  };\n  return {\n    props: {\n      meetup: meetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/SashaVerdiyev/Desktop/WebDev/react_course/nextJs/pages/[meetupId]/index.js"],"names":["MongoClient","useRouter","React","MeetupDetail","Dummy_Meetups","id","title","image","address","description","MeetupDetails","props","meetup","router","isFallback","getStaticPaths","password","username","database","url","client","connect","db","meetupsCollection","collection","loadedMeetups","find","_id","toArray","close","meetupsId","map","meetupId","toString","params","fallback","paths","getStaticProps","context","loadedMeetup","findOne","console","log"],"mappings":"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","sourcesContent":["import { MongoClient } from 'mongodb';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst Dummy_Meetups = [\n  {\n    id: 'm1',\n    title: 'first meetup',\n    image:\n      'https://images.unsplash.com/photo-1640210178824-d029d3cfd676?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n    address: 'lviv',\n    description: 'describe me ',\n  },\n  {\n    id: 'm2',\n    title: 'first meetup',\n    image:\n      'https://images.unsplash.com/photo-1640210178824-d029d3cfd676?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80',\n    address: 'lviv',\n    description: 'describe me ',\n  },\n];\n\nfunction MeetupDetails(props) {\n  const { meetup } = props;\n\n  const router = useRouter();\n\n  if (router.isFallback) return <div>Loading...</div>;\n\n  return (\n    <MeetupDetail\n      image={meetup.image}\n      description={meetup.description}\n      address={meetup.address}\n      title={meetup.title}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const loadedMeetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  let meetupsId = loadedMeetups.map((meetup) => {\n    const meetupId = meetup._id.toString();\n    return { params: { meetupId } };\n  });\n\n  return { fallback: true, paths: meetupsId };\n}\n\n// export async function getStaticProps({ params: {slug} }) {\n\nexport async function getStaticProps(context) {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const { meetupId } = context.params;\n  const loadedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n  console.log('ðŸš€ ~ getStaticProps ~ loadedMeetup', loadedMeetup);\n\n  client.close();\n\n  const meetup = {\n    title: loadedMeetup.title,\n    address: loadedMeetup.address,\n    image: loadedMeetup.image,\n    description: loadedMeetup.description,\n    id: loadedMeetup._id.toString(),\n  };\n\n  return {\n    props: { meetup: meetup },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}