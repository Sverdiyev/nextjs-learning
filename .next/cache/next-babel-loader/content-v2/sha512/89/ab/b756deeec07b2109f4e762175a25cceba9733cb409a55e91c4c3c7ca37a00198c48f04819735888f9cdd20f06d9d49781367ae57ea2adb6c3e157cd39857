{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/SashaVerdiyev/Desktop/WebDev/react_course/nextJs/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetUpList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticProps() {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const loadedMeetups = await meetupsCollection.find({}).toArray();\n  client.close();\n  let meetups = [];\n\n  for (const meetup of loadedMeetups) {\n    meetups.push({\n      title: meetup.title,\n      address: meetup.address,\n      image: meetup.image,\n      description: meetup.description,\n      id: meetup._id.toString()\n    });\n  }\n\n  return {\n    props: {\n      meetups: meetups\n    } // props: { meetups: loadedMeetups },\n    // revalidate: 20,\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/SashaVerdiyev/Desktop/WebDev/react_course/nextJs/pages/index.js"],"names":["MongoClient","MeetUpList","HomePage","props","meetups","getStaticProps","password","username","database","url","client","connect","db","meetupsCollection","collection","loadedMeetups","find","toArray","close","meetup","push","title","address","image","description","id","_id","toString"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,QAAQ,GAAG,kBAAjB;AACA,QAAMC,QAAQ,GAAG,cAAjB;AACA,QAAMC,QAAQ,GAAG,UAAjB;AAEA,QAAMC,GAAG,GAAI,iBAAgBF,QAAS,IAAGD,QAAS,+BAA8BE,QAAS,8BAAzF;AAEA,QAAME,MAAM,GAAG,IAAIV,WAAJ,CAAgBS,GAAhB,CAAf;AACA,QAAMC,MAAM,CAACC,OAAP,EAAN;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2BC,OAA3B,EAA5B;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,MAAId,OAAO,GAAG,EAAd;;AACA,OAAK,MAAMe,MAAX,IAAqBJ,aAArB,EAAoC;AAClCX,IAAAA,OAAO,CAACgB,IAAR,CAAa;AACXC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADH;AAEXC,MAAAA,OAAO,EAAEH,MAAM,CAACG,OAFL;AAGXC,MAAAA,KAAK,EAAEJ,MAAM,CAACI,KAHH;AAIXC,MAAAA,WAAW,EAAEL,MAAM,CAACK,WAJT;AAKXC,MAAAA,EAAE,EAAEN,MAAM,CAACO,GAAP,CAAWC,QAAX;AALO,KAAb;AAOD;;AAED,SAAO;AACLxB,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KADF,CAEL;AACA;;AAHK,GAAP;AAKD;AAED,eAAeF,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetUpList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return <MeetUpList meetups={props.meetups}></MeetUpList>;\n}\n\nexport async function getStaticProps() {\n  const password = 'aUSjJhO7eUkOOC1t';\n  const username = 'learningnext';\n  const database = 'nextJsDB';\n\n  const url = `mongodb+srv://${username}:${password}@learning.j1yvg.mongodb.net/${database}?retryWrites=true&w=majority`;\n\n  const client = new MongoClient(url);\n  await client.connect();\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const loadedMeetups = await meetupsCollection.find({}).toArray();\n\n  client.close();\n\n  let meetups = [];\n  for (const meetup of loadedMeetups) {\n    meetups.push({\n      title: meetup.title,\n      address: meetup.address,\n      image: meetup.image,\n      description: meetup.description,\n      id: meetup._id.toString(),\n    });\n  }\n\n  return {\n    props: { meetups: meetups },\n    // props: { meetups: loadedMeetups },\n    // revalidate: 20,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}